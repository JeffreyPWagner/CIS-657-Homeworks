{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf400
{\fonttbl\f0\fnil\fcharset0 Menlo-Bold;\f1\fnil\fcharset0 Menlo-Regular;\f2\fnil\fcharset0 Menlo-Italic;
}
{\colortbl;\red255\green255\blue255;\red155\green35\blue147;\red255\green255\blue255;\red0\green0\blue0;
\red83\green101\blue121;\red196\green26\blue22;\red28\green0\blue207;\red92\green38\blue153;\red57\green0\blue160;
\red50\green109\blue116;\red36\green82\blue86;}
{\*\expandedcolortbl;;\csgenericrgb\c60759\c13753\c57628;\csgenericrgb\c100000\c100000\c100000;\csgenericrgb\c0\c0\c0;
\csgenericrgb\c32401\c39745\c47507;\csgenericrgb\c77000\c10200\c8600;\csgenericrgb\c11000\c0\c81000;\csgenericrgb\c35922\c14825\c60191;\csgenericrgb\c22454\c0\c62803;
\csgenericrgb\c19418\c42935\c45455;\csgenericrgb\c13924\c32052\c33684;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab593
\pard\tx593\pardeftab593\pardirnatural\partightenfactor0

\f0\b\fs24 \cf2 \cb3 import
\f1\b0 \cf4  UIKit\
\

\f2\i \cf5 //-----------Homework 1----------//
\f1\i0 \cf4 \
\

\f2\i \cf5 //Problem 1
\f1\i0 \cf4 \

\f0\b \cf2 let
\f1\b0 \cf4  myString = \cf6 "hello"\cf4 \

\f0\b \cf2 var
\f1\b0 \cf4  cost = \cf7 3.14\cf4 \

\f0\b \cf2 let
\f1\b0 \cf4  cnt: \cf8 Int\cf4  = \cf7 2\cf4 \

\f0\b \cf2 var
\f1\b0 \cf4  shouldWe = 
\f0\b \cf2 true
\f1\b0 \cf4 \

\f0\b \cf2 let
\f1\b0 \cf4  hexValue = \cf7 0x11\cf4 \

\f0\b \cf2 let
\f1\b0 \cf4  decimalValue = \cf8 Int\cf4 (\cf8 String\cf4 (\cf7 10\cf4 , radix: \cf7 2\cf4 ))\
\cf9 print\cf4 (\cf10 decimalValue\cf4 )\
\

\f2\i \cf5 //Problem 2
\f1\i0 \cf4 \

\f0\b \cf2 let
\f1\b0 \cf4  value: \cf8 Double\cf4  = \cf7 3.222\cf4 \
\
\cf9 print\cf4 (\cf6 "the final value is \cf4 \\\cf6 (\cf10 value\cf6 )"\cf4 )\
\
\

\f2\i \cf5 //Problem 3
\f1\i0 \cf4 \

\f0\b \cf2 var
\f1\b0 \cf4  bees: [\cf8 String\cf4 ] = [\cf6 "queen"\cf4 ,\cf6 "worker"\cf4 ,\cf6 "drone"\cf4 ]\
\cf9 print\cf4 (\cf10 bees\cf4 [\cf7 0\cf4 ])\
\cf10 bees\cf4 .\cf9 append\cf4 (\cf6 "honey"\cf4 )\
\cf10 bees\cf4 +=[\cf6 "are"\cf4 ,\cf6 "us"\cf4 ]\
\cf9 print\cf4 (\cf10 bees\cf4 )\
\

\f2\i \cf5 //Problem 4
\f1\i0 \cf4 \

\f0\b \cf2 for
\f1\b0 \cf4  item 
\f0\b \cf2 in
\f1\b0 \cf4  \cf10 bees\cf4 \{\
    \cf9 print\cf4 (item)\
\}\

\f0\b \cf2 for
\f1\b0 \cf4  (index,value) 
\f0\b \cf2 in
\f1\b0 \cf4  \cf10 bees\cf4 .\cf9 enumerated\cf4 () \{\
    \cf9 print\cf4 (\cf6 "Item #\cf4 \\\cf6 (\cf4 index\cf6 ) is \cf4 \\\cf6 (\cf4 value\cf6 )"\cf4 )\
\}\
\

\f2\i \cf5 //Problem 5
\f1\i0 \cf4 \
\

\f0\b \cf2 var
\f1\b0 \cf4  authorDict:[\cf8 String\cf4 :\cf8 Decimal\cf4 ] = [\cf6 "Mark Twain"\cf4 :\cf7 8.9\cf4 ,\cf6 "Nathaniel Hawthorne"\cf4 :\cf7 5.1\cf4 ,\cf6 "John Steinbeck"\cf4 :\cf7 2.3\cf4 ,\cf6 "C.S. Lewis"\cf4 :\cf7 9.9\cf4 ,\cf6 "Jon Krakaur"\cf4 :\cf7 6.1\cf4 ]\

\f0\b \cf2 var
\f1\b0 \cf4  someDict1:[\cf8 Int\cf4 :\cf8 String\cf4 ] = [\cf7 1\cf4 :\cf6 "One"\cf4 , \cf7 2\cf4 :\cf6 "Two"\cf4 , \cf7 3\cf4 :\cf6 "Three"\cf4 ]\
\

\f2\i \cf5 //Problem 6
\f1\i0 \cf4 \
\cf9 print\cf4 (\cf10 authorDict\cf4 [\cf6 "John Steinbeck"\cf4 ]!)\
\cf10 authorDict\cf4 [\cf6 "Erik Larson"\cf4 ] = \cf7 9.2\cf4 \
\

\f0\b \cf2 if
\f1\b0 \cf4  \cf10 authorDict\cf4 [\cf6 "Mark Twain"\cf4 ]! > \cf10 authorDict\cf4 [\cf6 "Jon Krakaur"\cf4 ]! \{\
    \cf9 print\cf4 (\cf6 "Mark Twain"\cf4  )\
\}\

\f0\b \cf2 else
\f1\b0 \cf4  \{\
    \cf9 print\cf4 (\cf6 "Jon Krakaur"\cf4  )\
\}\
\

\f2\i \cf5 //Problem 7
\f1\i0 \cf4 \

\f0\b \cf2 for
\f1\b0 \cf4  (author,score) 
\f0\b \cf2 in
\f1\b0 \cf4  \cf10 authorDict\cf4  \{\
    \cf9 print\cf4 (\cf6 "\cf4 \\\cf6 (\cf4 author\cf6 ):\cf4 \\\cf6 (\cf4 score\cf6 )"\cf4 )\
\}\
\

\f2\i \cf5 //Problem 8
\f1\i0 \cf4 \

\f0\b \cf2 for
\f1\b0 \cf4  index 
\f0\b \cf2 in
\f1\b0 \cf4  \cf7 1\cf4 ...\cf7 10\cf4  \{\
    \cf9 print\cf4 (index)\
\}\
\

\f2\i \cf5 //Problem 9
\f1\i0 \cf4 \

\f0\b \cf2 for
\f1\b0 \cf4  index 
\f0\b \cf2 in
\f1\b0 \cf4  (\cf7 1\cf4 ...\cf7 10\cf4 ).\cf9 reversed\cf4 ()\{\
    \cf9 print\cf4 (index)\
\}\
\

\f2\i \cf5 //Problem 10
\f1\i0 \cf4 \

\f0\b \cf2 var
\f1\b0 \cf4  x = \cf7 5\cf4 \

\f0\b \cf2 var
\f1\b0 \cf4  y = \cf7 10\cf4 \

\f0\b \cf2 var
\f1\b0 \cf4  product = \cf7 0\cf4 \

\f0\b \cf2 for
\f1\b0 \cf4  
\f0\b \cf2 _
\f1\b0 \cf4  
\f0\b \cf2 in
\f1\b0 \cf4  \cf7 1\cf4 ...\cf10 y\cf4 \{\
    \cf10 product\cf4  += \cf10 x\cf4 \
\}\
\cf9 print\cf4 (\cf10 product\cf4 )\
\

\f2\i \cf5 //---------Homework 2------------
\f1\i0 \cf4 \
\

\f2\i \cf5 //Problem 1
\f1\i0 \cf4 \

\f0\b \cf2 var
\f1\b0 \cf4  i:\cf8 Int\cf4  = \cf7 0\cf4 \

\f0\b \cf2 var
\f1\b0 \cf4  sum:\cf8 Decimal\cf4  = \cf7 0\cf4 \

\f0\b \cf2 let
\f1\b0 \cf4  scores = \cf8 Array\cf4 (\cf10 authorDict\cf4 .\cf8 values\cf4 )\
\

\f0\b \cf2 while
\f1\b0 \cf4  \cf10 i\cf4  < \cf10 authorDict\cf4 .\cf8 keys\cf4 .\cf8 count\cf4  \{\
    \cf10 sum\cf4  += \cf10 scores\cf4 [\cf10 i\cf4 ]\
    \cf10 i\cf4 +=\cf7 1\cf4 \
\}\

\f0\b \cf2 let
\f1\b0 \cf4  average = \cf10 sum\cf4 /\cf8 Decimal\cf4 (\cf10 i\cf4 )\
\cf9 print\cf4 (\cf6 "Average \cf4 \\\cf6 (\cf10 average\cf6 )"\cf4 )\
\

\f2\i \cf5 //Problem 2
\f1\i0 \cf4 \

\f0\b \cf2 if
\f1\b0 \cf4  \cf10 average\cf4  < \cf7 5.0\cf4  \{\
    \cf9 print\cf4 (\cf6 "Low"\cf4 )\
\}\

\f0\b \cf2 else
\f1\b0 \cf4  
\f0\b \cf2 if
\f1\b0 \cf4  \cf10 average\cf4  < \cf7 7\cf4  \{\
    \cf9 print\cf4 (\cf6 "Moderate"\cf4 )\
\}\

\f0\b \cf2 else
\f1\b0 \cf4  \{\
    \cf9 print\cf4 (\cf6 "High"\cf4 )\
\}\
\

\f2\i \cf5 //Problem 3
\f1\i0 \cf4 \

\f0\b \cf2 var
\f1\b0 \cf4  strOut:\cf8 String\cf4 \

\f0\b \cf2 var
\f1\b0 \cf4  count = \cf7 1000\cf4 \

\f2\i \cf5 //---------------------------------VERIFY-------------------------//
\f1\i0 \cf4 \

\f0\b \cf2 switch
\f1\b0 \cf4  \cf10 count\cf4  \{\

\f0\b \cf2 case
\f1\b0 \cf4  \cf7 0\cf4 :\
    \cf10 strOut\cf4  = \cf6 "none"\cf4 \

\f0\b \cf2 case
\f1\b0 \cf4  \cf7 1\cf4 ...\cf7 3\cf4 :\
    \cf10 strOut\cf4  = \cf6 "a few"\cf4 \

\f0\b \cf2 case
\f1\b0 \cf4  \cf7 4\cf4 ...\cf7 9\cf4 :\
    \cf10 strOut\cf4  = \cf6 "several"\cf4 \

\f0\b \cf2 case
\f1\b0 \cf4  \cf7 10\cf4 ...\cf7 99\cf4 :\
    \cf10 strOut\cf4  = \cf6 "tens of"\cf4 \

\f0\b \cf2 case
\f1\b0 \cf4  \cf7 100\cf4 ...\cf7 999\cf4 :\
    \cf10 strOut\cf4  = \cf6 "hundreds of"\cf4 \

\f0\b \cf2 case
\f1\b0 \cf4  \cf7 1000\cf4 ...\cf7 999999\cf4 :\
    \cf10 strOut\cf4  = \cf6 "thousands of"\cf4 \

\f0\b \cf2 default
\f1\b0 \cf4 :\
    \cf10 strOut\cf4  = \cf6 "millions of"\cf4 \
\}\
\

\f2\i \cf5 //Problem 4
\f1\i0 \cf4 \

\f0\b \cf2 func
\f1\b0 \cf4  verbalizeNumber(count: \cf8 Int\cf4 ) -> \cf8 String\cf4  \{\
    
\f0\b \cf2 var
\f1\b0 \cf4  returnString:\cf8 String\cf4 \
    
\f0\b \cf2 switch
\f1\b0 \cf4  count \{\
    
\f0\b \cf2 case
\f1\b0 \cf4  \cf7 0\cf4 :\
        returnString = \cf6 "none"\cf4 \
    
\f0\b \cf2 case
\f1\b0 \cf4  \cf7 1\cf4 ...\cf7 3\cf4 :\
        returnString = \cf6 "a few"\cf4 \
    
\f0\b \cf2 case
\f1\b0 \cf4  \cf7 4\cf4 ...\cf7 9\cf4 :\
        returnString = \cf6 "several"\cf4 \
    
\f0\b \cf2 case
\f1\b0 \cf4  \cf7 10\cf4 ...\cf7 99\cf4 :\
        returnString = \cf6 "tens of"\cf4 \
    
\f0\b \cf2 case
\f1\b0 \cf4  \cf7 100\cf4 ...\cf7 999\cf4 :\
        returnString = \cf6 "hundreds of"\cf4 \
    
\f0\b \cf2 case
\f1\b0 \cf4  \cf7 1000\cf4 ...\cf7 999999\cf4 :\
        returnString = \cf6 "thousands of"\cf4 \
    
\f0\b \cf2 default
\f1\b0 \cf4 :\
        returnString = \cf6 "millions of"\cf4 \
    \}\
    
\f0\b \cf2 return
\f1\b0 \cf4  returnString\
\}\
\

\f2\i \cf5 //Problem 5
\f1\i0 \cf4 \

\f0\b \cf2 for
\f1\b0 \cf4  index 
\f0\b \cf2 in
\f1\b0 \cf4  (\cf7 0\cf4 ...\cf7 8\cf4 ).\cf9 map\cf4 (\{ \cf9 pow\cf4 (\cf7 10\cf4 ,$0) \}) \{\
    \cf9 print\cf4 (\cf11 verbalizeNumber\cf4 (count: \cf8 Int\cf4 (\cf8 NSDecimalNumber\cf4 (decimal: index)) ))\
\}\
\

\f2\i \cf5 //Problem 6
\f1\i0 \cf4 \
\
}